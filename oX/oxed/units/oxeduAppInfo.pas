{
   oxeduBuild, oxed build system
   Copyright (C) 2017. Dejan Boras
}

{$INCLUDE oxdefines.inc}
UNIT oxeduAppInfo;

INTERFACE

   USES
      uStd, uFileUtils,
      {oxed}
      oxeduProject;

TYPE

   { oxedTAppInfo }

   oxedTAppInfo = record
      {recreate the app information include file}
      procedure Recreate(const where: StdString);

      {gets a auto generated source file header with optionally closed comment tag}
      function GetSourceHeader(close: boolean = true): TAppendableString;
   end;

VAR
   oxedAppInfo: oxedTAppInfo;

IMPLEMENTATION

{ oxedTAppInfo }

procedure oxedTAppInfo.Recreate(const where: StdString);
var
   p: TAppendableString;

begin
   p := GetSourceHeader();
   p.Add('');

   p.Add('appInfo.SetName(''' + oxedProject.Name + ''');');

   if(oxedProject.ShortName <> '') then
      p.Add('appInfo.NameShort := ''' + oxedProject.ShortName + ''';');

   p.Add('appInfo.SetOrganization(''' + oxedProject.Organization + ''');');

   if(oxedProject.OrganizationShort <> '') then
      p.Add('appInfo.OrgShort := ''' + oxedProject.OrganizationShort + ''';');

   p.Add('appInfo.SetVersion(1, 0);' + LineEnding);

   FileUtils.WriteString(where, p);
end;

function oxedTAppInfo.GetSourceHeader(close: boolean): TAppendableString;
begin
   Result := '{';
   Result.Add('   ' + oxedProject.Name + ' (' + oxedProject.Identifier + ')');

   if(oxedProject.Organization <> '') then
      Result.Add('   ' + oxedProject.Organization + ' (' + oxedProject.OrganizationShort + ')');

   Result.Add('   Automatically generated by OXED, any modifications will be lost');

   if(close) then
      Result.Add('}');
end;

END.
